# .github/workflows/build.yml
name: Build ManufacturerManagerWithPlaywrightAndCICD

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'
      - name: Build solution
        run: dotnet build ManufacturerManagerWithPlaywrightAndCICD.sln -c Debug -p:Platform="Any CPU"
      - name: Install Playwright CLI
        run: dotnet tool install --global Microsoft.Playwright.CLI
      - name: Generate Playwright script
        run: playwright install --with-deps
      - name: Start test server
        shell: pwsh
        run: |
          Write-Host '⏳ Launching web server…'
          # Kick it off in the background
          Start-Process dotnet `
          -ArgumentList 'run --project src/MMUserInterface/MMUserInterface.csproj --no-build --urls http://localhost:5245' `
          -NoNewWindow
      - name: Wait for HTTP server
        shell: pwsh
        run: |
          Write-Host '⏳ Waiting for http://localhost:5245 to respond…'
          $timeout = Get-Date().AddSeconds(30)
          while ((Get-Date) -lt $timeout) {
            try {
              Invoke-WebRequest http://localhost:5245 -UseBasicParsing -ErrorAction Stop | Out-Null
              Write-Host '✅ Server is up!'
              exit 0
            } catch {
              Start-Sleep -Seconds 1
            }
          }
          Write-Error '❌ Server failed to start within 30s'
          exit 1
      - name: Run Unit Tests
        working-directory: TestsUnit
        run: dotnet test TestsUnit.csproj
          --no-build
          --configuration Debug
      - name: Run Playwright Tests
        working-directory: TestsPlaywright
        run: dotnet test TestsPlaywright.csproj
          --no-build
          --configuration Debug
