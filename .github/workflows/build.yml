name: Build and Test (.NET on Windows with Playwright)

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore

    - name: Run unit tests
      run: dotnet test TestsUnit.csproj
        --no-build
        --configuration Debug
      working-directory: TestsUnit
    
    - name: Restore .NET tools
      run: dotnet tool restore
      working-directory: TestsPlaywright

    - name: Install Playwright CLI (no manifest)
      run: dotnet tool install Microsoft.Playwright.CLI --tool-path tools
    
    - name: Install Playwright browsers
      run: tools/playwright install --with-deps

    # - name: Start MMUserInterface over HTTPS
    #   shell: pwsh
    #   run: |
    #     dotnet dev-certs https
    #     Start-Process dotnet -ArgumentList "run --project MMUserInterface/MMUserInterface.csproj --no-build --urls https://127.0.0.1:5245"
    #     Start-Sleep -Seconds 10
    #   working-directory: ManufacturerManagerWithPlaywrightAndCICD

    - name: Generate and trust HTTPS development certificate
      run: |
        dotnet dev-certs https --clean
        dotnet dev-certs https
      shell: pwsh

    # - name: Start MMUserInterface over HTTPS
    #   shell: pwsh
    #   run: |
    #     #dotnet dev-certs https --trust
    #     dotnet run --no-build --urls https://127.0.0.1:5245 *> server-log.txt &
    #     Start-Sleep -Seconds 15
    #     Get-Content server-log.txt
    #   working-directory: MMUserInterface

    # - name: Start MMUserInterface over HTTPS
    #   shell: pwsh
    #   run: |
    #     dotnet dev-certs https
    #     Start-Process -FilePath "dotnet" `
    #       -ArgumentList "run --no-build --urls https://127.0.0.1:5245" `
    #       -WorkingDirectory "${{ github.workspace }}\MMUserInterface" `
    #       -NoNewWindow
    #     Start-Sleep -Seconds 20
    #     Get-Content server-log.txt

    - name: Start MMUserInterface over HTTPS
      shell: pwsh
      run: |
        $logFile = "$env:GITHUB_WORKSPACE\MMUserInterface\server-log.txt"
        dotnet run --no-build --urls https://127.0.0.1:5245 *> $logFile &
        Start-Sleep -Seconds 20
        Get-Content $logFile
      working-directory: MMUserInterface

    - name: Wait for MMUserInterface root to respond over HTTPS
      shell: pwsh
      run: |
        $retries = 6
        $delay = 5
        $uri = "https://127.0.0.1:5245/"

        Write-Host "🔎 Checking MMUserInterface readiness at $uri"
        for ($i = 0; $i -lt $retries; $i++) {
          try {
            Invoke-WebRequest -Uri $uri -UseBasicParsing -TimeoutSec 5
            Write-Host "✅ Server is responsive"
            break
          } catch {
            Write-Host "⏳ Server not ready yet (attempt $($i + 1)/$retries)..."
            Start-Sleep -Seconds $delay
          }
        }

        if ($i -eq $retries) {
          Write-Error "❌ Server did not respond after $($retries * $delay) seconds."
          exit 1
        }

    - name: Run Playwright tests over HTTPS
      shell: pwsh
      run: dotnet test TestsPlaywright.csproj -- "UseHttps=true"
      working-directory: TestsPlaywright

    # - name: Start UserInterface with HTTPS
    #   run: |
    #     dotnet dev-certs https --trust
    #     Start-Process dotnet -ArgumentList "run --project 'D:\a\ManufacturerManagerWithPlaywrightAndCICD\ManufacturerManagerWithPlaywrightAndCICD\MMUserInterface\MMUserInterface.csproj' --urls https://localhost:5245"
    #     Start-Sleep -Seconds 10
    #   shell: pwsh

    # - name: Run Playwright Tests
    #   working-directory: TestsPlaywright
    #   run: dotnet test TestsPlaywright.csproj
    #     --no-build
    #     --configuration Debug